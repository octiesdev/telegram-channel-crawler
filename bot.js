import TelegramBot from "node-telegram-bot-api";
import { CONFIG } from "./config.js";
import fs from "fs-extra";

const bot = new TelegramBot(CONFIG.TELEGRAM_BOT_TOKEN, { polling: true });

// –ü—Ä–æ–≤–µ—Ä–∫–∞: —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞
bot.use((msg, next) => {
  if (msg.chat.id.toString() === CONFIG.ADMIN_CHAT_ID) {
    next();
  } else {
    bot.sendMessage(msg.chat.id, "‚õîÔ∏è –£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.");
  }
});

// /start
bot.onText(/\/start/, (msg) => {
  bot.sendMessage(msg.chat.id, "‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! –ù–∞–ø–∏—à–∏ /parse <—Å—Å—ã–ª–∫–∞>");
});

// /parse
bot.onText(/\/parse (.+)/, async (msg, match) => {
  const url = match[1];
  bot.sendMessage(msg.chat.id, `üîç –ó–∞–ø—É—Å–∫–∞—é –ø–∞—Ä—Å–∏–Ω–≥ –æ—Ç: ${url}`);

  // —Ç—É—Ç –ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞
  // –≤ –±—É–¥—É—â–µ–º –≤—ã–∑–æ–≤–µ–º runner.js ‚Üí run(url)
  await fs.appendFile("./logs/log.txt", `[${new Date().toISOString()}] START PARSE: ${url}\n`);
  bot.sendMessage(msg.chat.id, "üõ† –ü–∞—Ä—Å–∏–Ω–≥ –µ—â—ë –Ω–µ –∑–∞–ø—É—â–µ–Ω ‚Äî –Ω–æ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–Ω—è—Ç–∞. runner.js –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.");
});

// /status
bot.onText(/\/status/, async (msg) => {
  // –í –±—É–¥—É—â–µ–º –ø–æ–∫–∞–∂–µ–º —Å—Ç–∞—Ç—É—Å –∏–∑ –æ—á–µ—Ä–µ–¥–∏
  bot.sendMessage(msg.chat.id, "üìä –°—Ç–∞—Ç—É—Å: –ø–æ–∫–∞ –Ω–µ—á–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç—å (–ª–æ–≥–∏–∫–∞ runner.js –±—É–¥–µ—Ç –ø–æ–∑–∂–µ)");
});

// /reset
bot.onText(/\/reset/, async (msg) => {
  await fs.writeJson(CONFIG.QUEUE_FILE, []);
  bot.sendMessage(msg.chat.id, "‚ôªÔ∏è –û—á–µ—Ä–µ–¥—å –æ—á–∏—â–µ–Ω–∞. visited –∏ results –Ω–µ —Ç—Ä–æ–Ω—É—Ç—ã.");
});

// /results
bot.onText(/\/results/, async (msg) => {
  const file = CONFIG.RESULT_FILE;
  if (await fs.exists(file)) {
    bot.sendDocument(msg.chat.id, file);
  } else {
    bot.sendMessage(msg.chat.id, "‚õîÔ∏è –§–∞–π–ª results.json –ø–æ–∫–∞ –ø—É—Å—Ç –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω.");
  }
});